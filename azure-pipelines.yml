# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

strategy:
  matrix:
    ubuntu:
      imageName: 'ubuntu-16.04'
      installCmd:  |
        curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
        echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
    rhel:
      imageName: ''
      installCmd: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
        echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
    mac:
      imageName: 'macos-10.13'
      installCmd: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
        echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
    windows:
      imageName: 'vs2017-win2016'
      installCmd:
        curl -sSf -o rustup-init.exe https://win.rustup.rs
        rustup-init.exe -y --default-toolchain %RUSTUP_TOOLCHAIN%
        echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"

trigger:
- master

pool:
  vmImage: $(imageName)

steps:
- script: $(installCmd)
  displayName: 'Install Rust'

- script: |
    # the unit tests for all crates (without mocking the network)
    # run single-threaded because some tests change environment variables, which is not thread-safe
    cargo test --package notion-core --package notion-fail --package archive --package notion-fail-derive --package progress-read -- --test-threads=1
    # the acceptance tests, using network mocks
    NOTION_DEV=1 RUST_BACKTRACE=full cargo test --features mock-network
    # smoke tests: real data and no mocks
    NOTION_DEV=1 RUST_BACKTRACE=full cargo test --test smoke --features smoke-tests -- --test-threads 1
  displayName: 'Tests'
