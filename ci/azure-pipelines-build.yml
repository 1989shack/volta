jobs:
- job: ${{ parameters.name }}
  pool: 
    vmImage: ${{ parameters.vmImage }}
  steps:

  # Install Rust
  - ${{ if ne(parameters.name, 'Windows') }}:
    - script: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain nightly
        export PATH="$HOME/.cargo/bin:$PATH"
        echo "##vso[task.setvariable variable=PATH]$PATH"
        rustc -Vv
        cargo -V
      displayName: Install Rust
  - ${{ if eq(parameters.name, 'Windows') }}:
    - script: |
        curl -sSf -o rustup-init.exe https://win.rustup.rs
        rustup-init.exe -y --default-toolchain nightly
        set PATH=%PATH%;%USERPROFILE%\.cargo\bin
        echo "##vso[task.setvariable variable=PATH]%PATH%;%USERPROFILE%\.cargo\bin"
        rustc -Vv
        cargo -V
      displayName: Install Rust
  - script: yarn
    displayName: 'Install dependencies'
  - script: yarn test-ci
    displayName: 'Run tests'
  - script: yarn lint
    displayName: 'Lint'
  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '**/junit-*.xml'
      testRunTitle: TestRun ${{ parameters.name }} $(node_version)
  - task: PublishCodeCoverageResults@1
    displayName: 'Publish code coverage results'
    condition: succeededOrFailed()
    inputs: 
      codeCoverageTool: 'cobertura'
      summaryFileLocation: '**/coverage/cobertura-coverage.xml'
      reportDirectory: '**/parcel-bundler/coverage'